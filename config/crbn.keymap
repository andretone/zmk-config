/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define CONTROL 4

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
                                        // default layer, querty style
                                        // -----------------------------------------------------------------------------------------
                                        // |  TAB  |  Q   |  W   |  E   |  R   |  T   |   Y   |  U    |  I   |  O   |   P   |  `    |
                                        // |CTL/ESC|  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |  '    |
                                        // | SHIFT |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |   /   |SHF/RET|
                                        // | FN    | LGUI | LALT | LCTL | LOWR |SPACE | SPACE |  RAIS | LARW | DARW | UARW  |  RARW |
			bindings = <
                                &kp TAB        &kp Q    &kp W    &kp E       &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O    &kp P     &kp GRAVE
                                &mt LCTRL ESC  &kp A    &kp S    &kp D       &kp F     &kp G     &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp SQT
                                &kp LSHFT      &kp Z    &kp X    &kp C       &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT RET
                                &kp C_PP       &kp LGUI &kp LALT &mo CONTROL &mo LOWER &kp SPACE &kp SPACE &mo RAISE &kp LEFT  &kp DOWN &kp UP    &kp RIGHT
			>;
		};

    lower {
                                        // lower layer, probably used for simbols
                                        // -----------------------------------------------------------------------------------------
                                        // |       |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   |  INS  |
                                        // |       |      |      |      |      |      |       |  -    |  =   |  [   |   ]   |  \    |
                                        // |       |      |      |      |      |      |       |       |      |      |       |       |
                                        // |       |      |      |      | LOWR | BSPC |  DEL  |  ADJ  | HOME | PDWN | PUP   |  END  |
			bindings = <
                                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6   &kp N7       &kp N8       &kp N9    &kp N0    &kp INS
                                &trans &trans &trans &trans &trans &trans   &trans   &kp MINUS    &kp EQUAL    &kp LBKT  &kp RBKT  &kp BSLH
                                &trans &trans &trans &trans &trans &trans   &trans   &trans       &trans       &trans    &trans    &trans
                                &trans &trans &trans &trans &trans &kp BSPC &kp DEL  &mo ADJUST   &kp HOME     &kp PG_UP &kp PG_DN &kp END
			>;
    };

    raise {
			bindings = <
				&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
				&kp DEL &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH
				&trans &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp HASH &kp BSLH &kp PG_UP &kp PG_DN &trans
				&trans &trans &trans &trans &mo 3 &trans &trans &trans &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
    	>;
    };
    control {
			bindings = <
				&reset &bootloader &bt BT_CLR &bt BT_PRV &bt BT_NXT &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
    	>;
    };
  };
};
